# 3.冒泡排序：它重复地走访过要排序的数列，一次比较两个元素，
# 如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，
# 也就是说该数列已经排序完成
'''
第一次：i = 0 --> 7
found = False
j = 1 -->  7 - i = 7  2.当 i = 1     j = 1 --> 7 - 1 = 6 ... i = 6  j = 1 --> 1
i = 0
j = 1
lst[0] > lst[1]
[30, 13, 25, 16, 47, 26, 19, 10]
[13, 30, 25, 16, 47, 26, 19, 10]    found = True
j = 2
lst[1] > lst[2]
[13, 25, 30, 16, 47, 26, 19, 10]
[13, 25, 16, 30, 47, 26, 19, 10]
[13, 25, 16, 30, 47, 26, 19, 10]
[13, 25, 16, 30, 26, 47, 19, 10]
[13, 25, 16, 30, 26, 19, 47, 10]
[13, 25, 16, 30, 26, 19, 10, 47]

冒泡排序：就是把最大的数通过交换位置放到最后面
'''


# 冒泡(交换)排序算法
def bubble_sort(lst):
    for i in range(len(lst)):
        found = False
        print(lst)
        for j in range(1, len(lst) - i):
            if lst[j-1] > lst[j]:
                lst[j-1], lst[j] = lst[j], lst[j-1]
                found = True
            print(lst)
        # print(lst)
        if not found:
            break
    print(lst)


bubble_sort([30, 13, 25, 16, 47, 26, 19, 10])
